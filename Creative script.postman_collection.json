{
	"info": {
		"_postman_id": "6df6fad6-e2e4-4917-b760-e7bf3738d388",
		"name": "Creative script",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) in \"Tests\" to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31454101"
	},
	"item": [
		{
			"name": "Get All blogs data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3001/api/blog/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"api",
						"blog",
						""
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": [
				{
					"name": "Get All blogs data",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3001/api/blog/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"api",
								"blog",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "529"
						},
						{
							"key": "ETag",
							"value": "W/\"211-TiC4ygrDhCAteW8K2twX5nmym84\""
						},
						{
							"key": "Date",
							"value": "Fri, 12 Jan 2024 10:48:40 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": [\n        {\n            \"_id\": \"65a113b8481bc909beb10146\",\n            \"title\": \"this is a blog post\",\n            \"content\": \"hi this is vikash writing a post\",\n            \"author\": \"vikash\",\n            \"date\": \"2024-01-12T10:26:00.107Z\",\n            \"createdAt\": \"2024-01-12T10:26:00.112Z\",\n            \"updatedAt\": \"2024-01-12T10:26:00.112Z\",\n            \"__v\": 0\n        },\n        {\n            \"_id\": \"65a115ce884aaa77f6d17aab\",\n            \"title\": \"this is a example blog post\",\n            \"content\": \"hi this is vikash writing an example post\",\n            \"author\": \"vikash kumar\",\n            \"date\": \"2024-01-12T10:34:54.305Z\",\n            \"createdAt\": \"2024-01-12T10:34:54.309Z\",\n            \"updatedAt\": \"2024-01-12T10:34:54.309Z\",\n            \"__v\": 0\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Get a blog data by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3001/api/blog/65a113b8481bc909beb10146",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"api",
						"blog",
						"65a113b8481bc909beb10146"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": [
				{
					"name": "Get a blog data by id",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3001/api/blog/65a113b8481bc909beb10146",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"api",
								"blog",
								"65a113b8481bc909beb10146"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "274"
						},
						{
							"key": "ETag",
							"value": "W/\"112-7ypqxLpnTNVLh5NFGNS/eKw4gII\""
						},
						{
							"key": "Date",
							"value": "Fri, 12 Jan 2024 11:21:05 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"_id\": \"65a113b8481bc909beb10146\",\n        \"title\": \"this is a blog post\",\n        \"content\": \"hi this is vikash writing an example post updating\",\n        \"author\": \"vikash\",\n        \"date\": \"2024-01-12T10:26:00.107Z\",\n        \"createdAt\": \"2024-01-12T10:26:00.112Z\",\n        \"updatedAt\": \"2024-01-12T11:02:57.337Z\",\n        \"__v\": 0\n    }\n}"
				}
			]
		},
		{
			"name": "Add a blog post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"title\": \"this is a example blog post\",\n    \"content\":\"hi this is vikash writing an example post\",\n    \"author\":\"vikash kumar\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/api/blog/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"api",
						"blog",
						""
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": [
				{
					"name": "Add a blog post",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"this is a example blog post\",\n    \"content\":\"hi this is vikash writing an example post\",\n    \"author\":\"vikash kumar\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/api/blog/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"api",
								"blog",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "279"
						},
						{
							"key": "ETag",
							"value": "W/\"117-cha+M+CJzRoKz3Kc46CwCu7otTM\""
						},
						{
							"key": "Date",
							"value": "Fri, 12 Jan 2024 10:34:54 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"title\": \"this is a example blog post\",\n        \"content\": \"hi this is vikash writing an example post\",\n        \"author\": \"vikash kumar\",\n        \"_id\": \"65a115ce884aaa77f6d17aab\",\n        \"date\": \"2024-01-12T10:34:54.305Z\",\n        \"createdAt\": \"2024-01-12T10:34:54.309Z\",\n        \"updatedAt\": \"2024-01-12T10:34:54.309Z\",\n        \"__v\": 0\n    }\n}"
				}
			]
		},
		{
			"name": "Update blog content data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"content\":\"hi this is vikash writing an example post updating\",\n    \"deleted\":false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/api/blog/65a113b8481bc909beb10146",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"api",
						"blog",
						"65a113b8481bc909beb10146"
					]
				},
				"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
			},
			"response": [
				{
					"name": "Update data",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\":\"hi this is vikash writing an example post updating\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/api/blog/65a113b8481bc909beb10146",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"api",
								"blog",
								"65a113b8481bc909beb10146"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "274"
						},
						{
							"key": "ETag",
							"value": "W/\"112-ZzoHOLef/aDwHAkErF/TMUjRel4\""
						},
						{
							"key": "Date",
							"value": "Fri, 12 Jan 2024 10:54:33 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"_id\": \"65a113b8481bc909beb10146\",\n        \"title\": \"this is a blog post\",\n        \"content\": \"hi this is vikash writing an example post updating\",\n        \"author\": \"vikash\",\n        \"date\": \"2024-01-12T10:26:00.107Z\",\n        \"createdAt\": \"2024-01-12T10:26:00.112Z\",\n        \"updatedAt\": \"2024-01-12T11:35:42.801Z\",\n        \"__v\": 0,\n        \"deleted\": false\n    }\n}"
				},
				{
					"name": "Update deleted boolean if deleted",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"content\":\"hi this is vikash writing an example post updating\",\n    \"deleted\":false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/api/blog/65a113b8481bc909beb10146",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"api",
								"blog",
								"65a113b8481bc909beb10146"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "290"
						},
						{
							"key": "ETag",
							"value": "W/\"122-ljLr0iQv8ig4JSJtecQVM7Agwxo\""
						},
						{
							"key": "Date",
							"value": "Fri, 12 Jan 2024 11:35:42 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"_id\": \"65a113b8481bc909beb10146\",\n        \"title\": \"this is a blog post\",\n        \"content\": \"hi this is vikash writing an example post updating\",\n        \"author\": \"vikash\",\n        \"date\": \"2024-01-12T10:26:00.107Z\",\n        \"createdAt\": \"2024-01-12T10:26:00.112Z\",\n        \"updatedAt\": \"2024-01-12T11:35:42.801Z\",\n        \"__v\": 0,\n        \"deleted\": false\n    }\n}"
				}
			]
		},
		{
			"name": "Delete blog post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful DELETE request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3001/api/blog/65a113b8481bc909beb10146",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3001",
					"path": [
						"api",
						"blog",
						"65a113b8481bc909beb10146"
					]
				},
				"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
			},
			"response": [
				{
					"name": "Delete blog post",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/api/blog/65a113b8481bc909beb10146",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"api",
								"blog",
								"65a113b8481bc909beb10146"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "289"
						},
						{
							"key": "ETag",
							"value": "W/\"121-AULSZWryeFHKoc+PIjW7HHcQsbI\""
						},
						{
							"key": "Date",
							"value": "Fri, 12 Jan 2024 11:02:57 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"_id\": \"65a113b8481bc909beb10146\",\n        \"title\": \"this is a blog post\",\n        \"content\": \"hi this is vikash writing an example post updating\",\n        \"author\": \"vikash\",\n        \"date\": \"2024-01-12T10:26:00.107Z\",\n        \"createdAt\": \"2024-01-12T10:26:00.112Z\",\n        \"updatedAt\": \"2024-01-12T11:02:57.337Z\",\n        \"__v\": 0,\n        \"deleted\": true\n    }\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}